#!/bin/bash
#COMPLEMENTARY SCRIPT RESPONSIBLE FOR CREATING NEW PASSWORDS AND SOME OTHER PARAMETERS FOR NEW CONTAINERS GENERATED BY THE 'SPAWN' TOOL

# Desativa histórico bash
unset HISTFILE

# Obtendo o hostname da máquina
HOSTNAME=$(hostname)

network() {
sleep 10

# Reinicia o serviço systemd-resolved para garantir que a resolução de DNS esteja ativa
systemctl restart systemd-resolved

sleep 5

# Obtém um novo endereço IP via DHCP para a interface eth0
dhclient -r eth0
dhclient eth0

# Armazena o endereço de IP atribuído
IP_ADDRESS=$(ip -4 addr show eth0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}')
}

passwords() {
# Armazena o nome do usuário 'sysop' na variável TARGET_USER
TARGET_USER=$(grep 1001 /etc/passwd | cut -f 1 -d ":")

# Gera duas senhas seguras com caracteres especiais e 12 caracteres
PASSWORD_TARGET=$(pwgen -s 18 1)

# Verifica se o usuário TARGET_USER existe no sistema
if ! id "$TARGET_USER" &>/dev/null; then
    printf "\e[31m* ERROR:\e[0m USER '$TARGET_USER' DOES NOT EXIST. TERMINATING SCRIPT.\n"
    exit 1
fi

# Altera a senha do usuário TARGET_USER
echo "$TARGET_USER:$PASSWORD_TARGET" | chpasswd
if [ $? -ne 0 ]; then
    printf "\e[31m* ERROR:\e[0m FAILED TO CHANGE PASSWORD FOR USER '$TARGET_USER'.\n"
    exit 1
fi
}

baseboard() {
printf "\e[32m*\e[0m CONTAINER: \e[32m%s\e[0m\n" "$HOSTNAME"
echo -e "\033[32m*\033[0m GENERATED PASSWORD FOR \033[32mSysOp\033[0m USER: \033[32m\"$PASSWORD_TARGET\"\033[0m"
printf "\e[32m*\e[0m IP ADDRESS: \e[32m%s\e[0m\n" "$IP_ADDRESS"
}

finish() {
# Remove pacotes não mais necessários
apt -y autoremove > /dev/null 2>&1

# Remove o script atual (o arquivo que está executando)
rm -- "$0"
}

network; passwords; baseboard; finish